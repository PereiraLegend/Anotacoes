import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import pyplot
import plotly.express as px
"""
 Obs.: Mantive o iris data na sua forma original, logo o pandas o lê como coluna 1 = 5.1,
 coluna 2 = 3.5, coluna 3 = 1.4, coluna 4= 0.2, ele os associa como seus respectivos nomes
"""

iris_df = pd.read_csv("iris.data")
wine_df = pd.read_csv("wine.data")
accelerometer_df = pd.read_csv("accelerometer.csv")
tetuancity_df = pd.read_csv("Tetuan City power consumption.csv", low_memory= False)
pedalmeedges_df = pd.read_csv("pedalme_edges.csv")

print("#############################################################################################################")
print("#############################################################################################################")
print("USANDO O IRIS DATA")
print("#############################################################################################################")
print("#############################################################################################################")

print("Obs.: Mantive o iris data na sua forma original, logo o pandas o lê como coluna 1 = 5.1, coluna 2 = 3.5, coluna 3 = 1.4, coluna 4= 0.2, ele os associa como seus respectivos nomes")
print("========================================================================")
print("TIPOS DE DADOS DO DATAFRAME:")
print("========================================================================")
print(iris_df.dtypes)
print("========================================================================")

print("========================================================================")
print("TIPOS DE DADOS DE CADA COLUNA:")
print("========================================================================")
print(iris_df.info())
print("========================================================================")

print("========================================================================")
print("DADOS BRUTOS")
print("========================================================================")
print(iris_df)
print("========================================================================")

print("========================================================================")
print("ORDENANDO DE FORMA ASCENDENTE CADA UMA DAS COLUNAS:")
print("========================================================================")
print("COLUNA 1:")
print("------------------------------------------------------------------------")
print(iris_df.sort_values('5.1'))
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("------------------------------------------------------------------------")
print(iris_df.sort_values('3.5'))
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("------------------------------------------------------------------------")
print(iris_df.sort_values('1.4'))
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("------------------------------------------------------------------------")
print(iris_df.sort_values('0.2'))
print("========================================================================")

print("========================================================================")
print("ORDENANDO DE FORMA DECRESCENTE CADA UMA DAS COLUNAS:")
print("========================================================================")
print("COLUNA 1:")
print("------------------------------------------------------------------------")
print(iris_df.sort_values('5.1', ascending = False))
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("------------------------------------------------------------------------")
print(iris_df.sort_values('3.5', ascending = False))
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("------------------------------------------------------------------------")
print(iris_df.sort_values('1.4', ascending = False))
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("------------------------------------------------------------------------")
print(iris_df.sort_values('0.2', ascending = False))
print("========================================================================")

print("========================================================================")
print("DESCRIÇÃO:")
print("========================================================================")
print(iris_df.describe())
print("========================================================================")

print("========================================================================")
print("MÉDIA DO IRIS.DATA:")
print("========================================================================")
print(iris_df[["5.1","3.5","1.4","0.2"]].mean()) # Tirando a média
print("========================================================================")

print("========================================================================")
print("VALORES ABAIXO DA MÉDIA EM CADA COLUNA:")
print("========================================================================")
print("COLUNA 1:")
print("MÉDIA:",iris_df[["5.1"]].mean())
print("------------------------------------------------------------------------")
print(iris_df[["5.1"]] < iris_df[["5.1"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("MÉDIA:",iris_df[["3.5"]].mean())
print("------------------------------------------------------------------------")
print(iris_df[["3.5"]] < iris_df[["3.5"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("MÉDIA:",iris_df[["1.4"]].mean())
print("------------------------------------------------------------------------")
print(iris_df[["1.4"]] < iris_df[["1.4"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("MÉDIA:",iris_df[["0.2"]].mean())
print("------------------------------------------------------------------------")
print(iris_df[["0.2"]] < iris_df[["0.2"]].mean())
print("========================================================================")

print("========================================================================")
print("VALORES ACIMA DA MÉDIA EM CADA COLUNA:")
print("========================================================================")
print("COLUNA 1:")
print("MÉDIA:",iris_df[["5.1"]].mean())
print("------------------------------------------------------------------------")
print(iris_df[["5.1"]] > iris_df[["5.1"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("MÉDIA:",iris_df[["3.5"]].mean())
print("------------------------------------------------------------------------")
print(iris_df[["3.5"]] > iris_df[["3.5"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("MÉDIA:",iris_df[["1.4"]].mean())
print("------------------------------------------------------------------------")
print(iris_df[["1.4"]] > iris_df[["1.4"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("MÉDIA:",iris_df[["0.2"]].mean())
print("------------------------------------------------------------------------")
print(iris_df[["0.2"]] > iris_df[["0.2"]].mean())
print("========================================================================")

print("========================================================================")
print("DESVIO-PADRÃO DO IRIS.DATA:")
print("========================================================================")
desviopd1  = iris_df.loc[:,].std(numeric_only=True)
print(str(desviopd1))
print("========================================================================")

print("========================================================================")
print("MODA DO IRIS.DATA:")
print("========================================================================")
print(iris_df.mode()) # Tirando a moda (amostral) [["5.1","3.5","1.4","0.2"]]
print("========================================================================")

print("========================================================================")
print("MEDIANA DO IRIS.DATA:")
print("========================================================================")
media_iris = iris_df.median(numeric_only=True)
print(media_iris)
print("========================================================================")

maximo_coluna1 = iris_df.loc[:,'5.1'].max()
minimo_coluna1 = iris_df.loc[:,'5.1'].min()
maximo_coluna2 = iris_df.loc[:,'3.5'].max()
minimo_coluna2 = iris_df.loc[:,'3.5'].min()
maximo_coluna3 = iris_df.loc[:,'1.4'].max()
minimo_coluna3 = iris_df.loc[:,'1.4'].min()
maximo_coluna4 = iris_df.loc[:,'0.2'].max()
minimo_coluna4 = iris_df.loc[:,'0.2'].min()

print("========================================================================")
print("MAIOR E MENOR VALOR DAS COLUNAS DO IRIS.DATA:")
print("========================================================================")
print("Maximo da coluna 1 = "+str(maximo_coluna1))
print("Minimo coluna 1 = "+str(minimo_coluna1))
print("========================================================================")
print("Maximo da coluna 2 = "+str(maximo_coluna2))
print("Minimo coluna 2 = "+str(minimo_coluna2))
print("========================================================================")
print("Maximo da coluna 3 = "+str(maximo_coluna3))
print("Minimo coluna 3 = "+str(minimo_coluna3))
print("========================================================================")
print("Maximo da coluna 4 = "+str(maximo_coluna4))
print("Minimo coluna 4 = "+str(minimo_coluna4))
print("========================================================================")

print("#############################################################################################################")
print("#############################################################################################################")
print("USANDO O WINE DATA")
print("#############################################################################################################")
print("#############################################################################################################")

print("Obs.: Mantive o iris data na sua forma original, logo o pandas o lê como coluna 1 = 5.1, coluna 2 = 3.5, coluna 3 = 1.4, coluna 4= 0.2, ele os associa como seus respectivos nomes")
print("========================================================================")
print("TIPOS DE DADOS DO DATAFRAME:")
print("========================================================================")
print(wine_df.dtypes)
print("========================================================================")

print("========================================================================")
print("TIPOS DE DADOS DE CADA COLUNA:")
print("========================================================================")
print(wine_df.info())
print("========================================================================")

print("========================================================================")
print("DADOS BRUTOS")
print("========================================================================")
print(wine_df)
print("========================================================================")

print("========================================================================")
print("ORDENANDO DE FORMA ASCENDENTE CADA UMA DAS COLUNAS:")
print("========================================================================")
print("COLUNA 1:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('1'))
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('14.23'))
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('1.71'))
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('2.43'))
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('15.6'))
print("------------------------------------------------------------------------")
print("COLUNA 6:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('127'))
print("------------------------------------------------------------------------")
print("COLUNA 7:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('2.8'))
print("------------------------------------------------------------------------")
print("COLUNA 8:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('3.06'))
print("------------------------------------------------------------------------")
print("COLUNA 9:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('.28'))
print("------------------------------------------------------------------------")
print("COLUNA 10:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('2.29'))
print("------------------------------------------------------------------------")
print("COLUNA 11:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('5.64'))
print("------------------------------------------------------------------------")
print("COLUNA 12:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('1.04'))
print("------------------------------------------------------------------------")
print("COLUNA 13:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('3.92'))
print("------------------------------------------------------------------------")
print("COLUNA 14:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('1065'))
print("========================================================================")


print("========================================================================")
print("ORDENANDO DE FORMA DECRESCENTE CADA UMA DAS COLUNAS:")
print("========================================================================")
print("COLUNA 1:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('1', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('14.23', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('1.71', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('2.43', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('15.6', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 6:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('127', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 7:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('2.8', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 8:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('3.06', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 9:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('.28', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 10:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('2.29', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 11:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('5.64', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 12:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('1.04', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 13:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('3.92', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 14:")
print("------------------------------------------------------------------------")
print(wine_df.sort_values('1065', ascending= False))
print("========================================================================")

print("========================================================================")
print("DESCRIÇÃO:")
print("========================================================================")
print(wine_df.describe())
print("========================================================================")

print("========================================================================")
print("MÉDIA DO WINE.DATA:")
print("========================================================================")
print(wine_df[["1","14.23",'1.71','2.43','15.6','127','2.8','3.06','.28','2.29','5.64','1.04','3.92','1065']].mean()) # Tirando a média
print("========================================================================")

print("========================================================================")
print("VALORES ABAIXO DA MÉDIA EM CADA COLUNA:")
print("========================================================================")
print("COLUNA 1:")
print("MÉDIA:",wine_df[["1"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["1"]] < wine_df[["1"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("MÉDIA:",wine_df[["14.23"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["14.23"]] < wine_df[["14.23"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("MÉDIA:",wine_df[["1.71"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["1.71"]] < wine_df[["1.71"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("MÉDIA:",wine_df[["2.43"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["2.43"]] < wine_df[["2.43"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("MÉDIA:",wine_df[["15.6"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["15.6"]] < wine_df[["15.6"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 6:")
print("MÉDIA:",wine_df[["127"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["127"]] < wine_df[["127"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 7:")
print("MÉDIA:",wine_df[["2.8"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["2.8"]] < wine_df[["2.8"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 8:")
print("MÉDIA:",wine_df[["3.06"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["3.06"]] < wine_df[["3.06"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 9:")
print("MÉDIA:",wine_df[[".28"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[[".28"]] < wine_df[[".28"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 10:")
print("MÉDIA:",wine_df[["2.29"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["2.29"]] < wine_df[["2.29"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 11:")
print("MÉDIA:",wine_df[[".28"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[[".28"]] < wine_df[[".28"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 12:")
print("MÉDIA:",wine_df[["5.64"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["5.64"]] < wine_df[["5.64"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 13:")
print("MÉDIA:",wine_df[["1.04"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["1.04"]] < wine_df[["1.04"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 14:")
print("MÉDIA:",wine_df[["3.92"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["3.92"]] < wine_df[["3.92"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 15:")
print("MÉDIA:",wine_df[["1065"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["1065"]] < wine_df[["1065"]].mean())
print("========================================================================")

print("========================================================================")
print("VALORES ACIMA DA MÉDIA EM CADA COLUNA:")
print("========================================================================")
print("COLUNA 1:")
print("MÉDIA:",wine_df[["1"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["1"]] > wine_df[["1"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("MÉDIA:",wine_df[["14.23"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["14.23"]] > wine_df[["14.23"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("MÉDIA:",wine_df[["1.71"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["1.71"]] > wine_df[["1.71"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("MÉDIA:",wine_df[["2.43"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["2.43"]] > wine_df[["2.43"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("MÉDIA:",wine_df[["15.6"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["15.6"]] > wine_df[["15.6"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 6:")
print("MÉDIA:",wine_df[["127"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["127"]] > wine_df[["127"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 7:")
print("MÉDIA:",wine_df[["2.8"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["2.8"]] > wine_df[["2.8"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 8:")
print("MÉDIA:",wine_df[["3.06"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["3.06"]] > wine_df[["3.06"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 9:")
print("MÉDIA:",wine_df[[".28"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[[".28"]] > wine_df[[".28"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 10:")
print("MÉDIA:",wine_df[["2.29"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["2.29"]] > wine_df[["2.29"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 11:")
print("MÉDIA:",wine_df[[".28"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[[".28"]] > wine_df[[".28"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 12:")
print("MÉDIA:",wine_df[["5.64"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["5.64"]] > wine_df[["5.64"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 13:")
print("MÉDIA:",wine_df[["1.04"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["1.04"]] > wine_df[["1.04"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 14:")
print("MÉDIA:",wine_df[["3.92"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["3.92"]] > wine_df[["3.92"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 15:")
print("MÉDIA:",wine_df[["1065"]].mean())
print("------------------------------------------------------------------------")
print(wine_df[["1065"]] > wine_df[["1065"]].mean())
print("========================================================================")

print("========================================================================")
print("DESVIO-PADRÃO DO WINE.DATA:")
print("========================================================================")
desviopd2  = wine_df.loc[:,].std(numeric_only=True)
print(str(desviopd2))
print("========================================================================")

print("========================================================================")
print("MODA DO WINE.DATA:")
print("========================================================================")
print(wine_df.mode()) # Tirando a moda (amostral)
print("========================================================================")

print("========================================================================")
print("MEDIANA DO WINE.DATA:")
print("========================================================================")
media_wine = wine_df.median(numeric_only=True)
print(media_wine)
print("========================================================================")

maximo_coluna1_wine = wine_df.loc[:,'1'].max()
minimo_coluna1_wine = wine_df.loc[:,'1'].min()

maximo_coluna2_wine = wine_df.loc[:,'14.23'].max()
minimo_coluna2_wine = wine_df.loc[:,'14.23'].min()

maximo_coluna3_wine = wine_df.loc[:,'1.71'].max()
minimo_coluna3_wine = wine_df.loc[:,'1.71'].min()

maximo_coluna4_wine = wine_df.loc[:,'2.43'].max()
minimo_coluna4_wine = wine_df.loc[:,'2.43'].min()

maximo_coluna5_wine = wine_df.loc[:,'15.6'].max()
minimo_coluna5_wine = wine_df.loc[:,'15.6'].min()

maximo_coluna6_wine = wine_df.loc[:,'127'].max()
minimo_coluna6_wine = wine_df.loc[:,'127'].min()

maximo_coluna7_wine = wine_df.loc[:,'2.8'].max()
minimo_coluna7_wine = wine_df.loc[:,'2.8'].min()

maximo_coluna8_wine = wine_df.loc[:,'3.06'].max()
minimo_coluna8_wine = wine_df.loc[:,'3.06'].min()

maximo_coluna9_wine = wine_df.loc[:,'.28'].max()
minimo_coluna9_wine = wine_df.loc[:,'.28'].min()

maximo_coluna10_wine = wine_df.loc[:,'2.29'].max()
minimo_coluna10_wine = wine_df.loc[:,'2.29'].min()

maximo_coluna11_wine = wine_df.loc[:,'5.64'].max()
minimo_coluna11_wine = wine_df.loc[:,'5.64'].min()

maximo_coluna12_wine = wine_df.loc[:,'1.04'].max()
minimo_coluna12_wine = wine_df.loc[:,'1.04'].min()

maximo_coluna13_wine = wine_df.loc[:,'3.92'].max()
minimo_coluna13_wine = wine_df.loc[:,'3.92'].min()

maximo_coluna14_wine = wine_df.loc[:,'1065'].max()
minimo_coluna14_wine = wine_df.loc[:,'1065'].min()

print("========================================================================")
print("MAIOR E MENOR VALOR DAS COLUNAS DO WINE.DATA:")
print("========================================================================")
print("Maximo da coluna 1 = "+str(maximo_coluna1_wine))
print("Minimo coluna 1 = "+str(minimo_coluna1_wine))
print("========================================================================")
print("Maximo da coluna 2 = "+str(maximo_coluna2_wine))
print("Minimo coluna 2 = "+str(minimo_coluna2_wine))
print("========================================================================")
print("Maximo da coluna 3 = "+str(maximo_coluna3_wine))
print("Minimo coluna 3 = "+str(minimo_coluna3_wine))
print("========================================================================")
print("Maximo da coluna 4 = "+str(maximo_coluna4_wine))
print("Minimo coluna 4 = "+str(minimo_coluna4_wine))
print("========================================================================")
print("Maximo da coluna 5 = "+str(maximo_coluna5_wine))
print("Minimo coluna 5 = "+str(minimo_coluna5_wine))
print("========================================================================")
print("Maximo da coluna 6 = "+str(maximo_coluna6_wine))
print("Minimo coluna 6 = "+str(minimo_coluna6_wine))
print("========================================================================")
print("Maximo da coluna 7 = "+str(maximo_coluna7_wine))
print("Minimo coluna 7 = "+str(minimo_coluna7_wine))
print("========================================================================")
print("Maximo da coluna 8 = "+str(maximo_coluna8_wine))
print("Minimo coluna 8 = "+str(minimo_coluna8_wine))
print("========================================================================")
print("Maximo da coluna 9 = "+str(maximo_coluna9_wine))
print("Minimo coluna 9 = "+str(minimo_coluna9_wine))
print("========================================================================")
print("Maximo da coluna 10 = "+str(maximo_coluna10_wine))
print("Minimo coluna 10 = "+str(minimo_coluna10_wine))
print("========================================================================")
print("Maximo da coluna 11 = "+str(maximo_coluna11_wine))
print("Minimo coluna 11 = "+str(minimo_coluna11_wine))
print("========================================================================")
print("Maximo da coluna 12 = "+str(maximo_coluna12_wine))
print("Minimo coluna 12 = "+str(minimo_coluna12_wine))
print("========================================================================")
print("Maximo da coluna 13 = "+str(maximo_coluna13_wine))
print("Minimo coluna 13 = "+str(minimo_coluna13_wine))
print("========================================================================")
print("Maximo da coluna 14 = "+str(maximo_coluna14_wine))
print("Minimo coluna 14 = "+str(minimo_coluna14_wine))
print("========================================================================")

print("#############################################################################################################")
print("#############################################################################################################")
print("USANDO O WINEQUALITY-RED")
print("#############################################################################################################")
print("#############################################################################################################")

print("========================================================================")
print("TIPOS DE DADOS DO DATAFRAME:")
print("========================================================================")
print(accelerometer_df.dtypes)
print("========================================================================")

print("========================================================================")
print("TIPOS DE DADOS DE CADA COLUNA:")
print("========================================================================")
print(accelerometer_df.info())
print("========================================================================")

print("========================================================================")
print("DADOS BRUTOS")
print("========================================================================")
print(accelerometer_df)
print("========================================================================")

print("========================================================================")
print("ORDENANDO DE FORMA ASCENDENTE CADA UMA DAS COLUNAS:")
print("========================================================================")
print("COLUNA 1:")
print("------------------------------------------------------------------------")
print(accelerometer_df.sort_values("wconfid"))
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("------------------------------------------------------------------------")
print(accelerometer_df.sort_values("pctid"))
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("------------------------------------------------------------------------")
print(accelerometer_df.sort_values('x'))
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("------------------------------------------------------------------------")
print(accelerometer_df.sort_values('y'))
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("------------------------------------------------------------------------")
print(accelerometer_df.sort_values('z'))
print("========================================================================")


print("========================================================================")
print("ORDENANDO DE FORMA DECRESCENTE CADA UMA DAS COLUNAS:")
print("========================================================================")
print("COLUNA 1:")
print("------------------------------------------------------------------------")
print(accelerometer_df.sort_values('wconfid', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("------------------------------------------------------------------------")
print(accelerometer_df.sort_values('pctid', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("------------------------------------------------------------------------")
print(accelerometer_df.sort_values('x', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("------------------------------------------------------------------------")
print(accelerometer_df.sort_values('y', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("------------------------------------------------------------------------")
print(accelerometer_df.sort_values('z', ascending= False))
print("========================================================================")


print("========================================================================")
print("DESCRIÇÃO:")
print("========================================================================")
print(accelerometer_df.describe())

print("========================================================================")
print("MÉDIA DO ACCELEROMETER:")
print("========================================================================")
print(accelerometer_df[["wconfid", "pctid", 'x', 'y', 'z']].mean()) # Tirando a média
print("========================================================================")

print("========================================================================")
print("VALORES ABAIXO DA MÉDIA EM CADA COLUNA:")
print("========================================================================")
print("COLUNA 1:")
print("MÉDIA:", accelerometer_df[["wconfid"]].mean())
print("------------------------------------------------------------------------")
print(accelerometer_df[["wconfid"]] < accelerometer_df[["wconfid"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("MÉDIA:", accelerometer_df[["pctid"]].mean())
print("------------------------------------------------------------------------")
print(accelerometer_df[["pctid"]] < accelerometer_df[["pctid"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("MÉDIA:", accelerometer_df[["x"]].mean())
print("------------------------------------------------------------------------")
print(accelerometer_df[["x"]] < accelerometer_df[["x"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("MÉDIA:", accelerometer_df[["y"]].mean())
print("------------------------------------------------------------------------")
print(accelerometer_df[["y"]] < accelerometer_df[["y"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("MÉDIA:", accelerometer_df[["z"]].mean())
print("------------------------------------------------------------------------")
print(accelerometer_df[["z"]] < accelerometer_df[["z"]].mean())
print("========================================================================")


print("========================================================================")
print("VALORES ACIMA DA MÉDIA EM CADA COLUNA:")
print("========================================================================")
print("COLUNA 1:")
print("MÉDIA:", accelerometer_df[["wconfid"]].mean())
print("------------------------------------------------------------------------")
print(accelerometer_df[["wconfid"]] > accelerometer_df[["wconfid"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("MÉDIA:", accelerometer_df[["pctid"]].mean())
print("------------------------------------------------------------------------")
print(accelerometer_df[["pctid"]] > accelerometer_df[["pctid"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("MÉDIA:", accelerometer_df[["x"]].mean())
print("------------------------------------------------------------------------")
print(accelerometer_df[["x"]] > accelerometer_df[["x"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("MÉDIA:", accelerometer_df[["y"]].mean())
print("------------------------------------------------------------------------")
print(accelerometer_df[["y"]] > accelerometer_df[["y"]].mean())
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("MÉDIA:", accelerometer_df[["z"]].mean())
print("------------------------------------------------------------------------")
print(accelerometer_df[["z"]] > accelerometer_df[["z"]].mean())
print("========================================================================")

print("========================================================================")
print("DESVIO-PADRÃO DO ACCELEROMETER:")
print("========================================================================")
desviopd3  = accelerometer_df.loc[:,].std(numeric_only=True)
print(str(desviopd3))
print("========================================================================")

print("========================================================================")
print("MODA DO ACCELEROMETER:")
print("========================================================================")
print(accelerometer_df.mode()) # Tirando a moda (amostral)
print("========================================================================")

print("========================================================================")
print("MEDIANA DO ACCELEROMETER:")
print("========================================================================")
media_accelerometer = accelerometer_df.median(numeric_only=True)
print(media_accelerometer)
print("========================================================================")

maximo_A = accelerometer_df.loc[:,'wconfid'].max()
minimo_A = accelerometer_df.loc[:,'wconfid'].min()

maximo_B = accelerometer_df.loc[:,'pctid'].max()
minimo_B = accelerometer_df.loc[:,'pctid'].min()

maximo_C = accelerometer_df.loc[:,'x'].max()
minimo_C = accelerometer_df.loc[:,'x'].min()

maximo_D = accelerometer_df.loc[:,'y'].max()
minimo_D = accelerometer_df.loc[:,'y'].min()

maximo_E = accelerometer_df.loc[:,'z'].max()
minimo_E = accelerometer_df.loc[:,'z'].min()

print("========================================================================")
print("MAIOR E MENOR VALOR DAS COLUNAS DO ACCELEROMETER:")
print("========================================================================")
print("Maximo da coluna 1 = "+str(maximo_A))
print("Minimo coluna 1 = "+str(minimo_A))
print("========================================================================")
print("Maximo da coluna 2 = "+str(maximo_B))
print("Minimo coluna 2 = "+str(minimo_B))
print("========================================================================")
print("Maximo da coluna 3 = "+str(maximo_C))
print("Minimo coluna 3 = "+str(minimo_C))
print("========================================================================")
print("Maximo da coluna 4 = "+str(maximo_D))
print("Minimo coluna 4 = "+str(minimo_D))
print("========================================================================")
print("Maximo da coluna 5 = "+str(maximo_E))
print("Minimo coluna 5 = "+str(minimo_E))
print("========================================================================")

print("#############################################################################################################")
print("#############################################################################################################")
print("USANDO O TETUAN CITY POWER CONSUMPTION")
print("#############################################################################################################")
print("#############################################################################################################")

print("========================================================================")
print("TIPOS DE DADOS DO DATAFRAME:")
print("========================================================================")
print(tetuancity_df.dtypes)
print("========================================================================")

print("========================================================================")
print("TIPOS DE DADOS DE CADA COLUNA:")
print("========================================================================")
print(tetuancity_df.info())
print("========================================================================")

print("========================================================================")
print("DADOS BRUTOS")
print("========================================================================")
print(tetuancity_df)
print("========================================================================")

print("========================================================================")
print("ORDENANDO DE FORMA ASCENDENTE CADA UMA DAS COLUNAS:")
print("========================================================================")
print("COLUNA 1:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values("DateTime"))
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values("Temperature"))
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('Humidity'))
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('Wind Speed'))
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('general diffuse flows'))
print("------------------------------------------------------------------------")
print("COLUNA 6:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('diffuse flows'))
print("------------------------------------------------------------------------")
print("COLUNA 7:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('Zone 1 Power Consumption'))
print("------------------------------------------------------------------------")
print("COLUNA 8:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('Zone 2  Power Consumption'))
print("------------------------------------------------------------------------")
print("COLUNA 9:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('Zone 3  Power Consumption'))
print("========================================================================")


print("========================================================================")
print("ORDENANDO DE FORMA DECRESCENTE CADA UMA DAS COLUNAS:")
print("========================================================================")
print("COLUNA 1:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values("DateTime", ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values("Temperature", ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('Humidity', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('Wind Speed', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('general diffuse flows', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 6:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('diffuse flows', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 7:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('Zone 1 Power Consumption', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 8:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('Zone 2  Power Consumption', ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 9:")
print("------------------------------------------------------------------------")
print(tetuancity_df.sort_values('Zone 3  Power Consumption', ascending= False))
print("========================================================================")


print("========================================================================")
print("DESCRIÇÃO:")
print("========================================================================")
print(tetuancity_df.describe())

print("========================================================================")
print("MÉDIA DO TETUAN CITY:")
print("========================================================================")
# DateTima é data
print(tetuancity_df[['Temperature','Humidity','Wind Speed','general diffuse flows','diffuse flows','Zone 1 Power Consumption','Zone 2  Power Consumption','Zone 3  Power Consumption']].mean()) # Tirando a média
print("========================================================================")

print("========================================================================")
print("VALORES ABAIXO DA MÉDIA EM CADA COLUNA:")
print("========================================================================")
print("COLUNA 1:")
print("MÉDIA: -- NÃO TEM É DATA --")
print("------------------------------------------------------------------------")
print("É DATA")
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("MÉDIA:", tetuancity_df[['Temperature']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Temperature']] < tetuancity_df[['Temperature']].mean())
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("MÉDIA:", tetuancity_df[['Humidity']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Humidity']] < tetuancity_df[['Humidity']].mean())
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("MÉDIA:", tetuancity_df[['Wind Speed']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Wind Speed']] < tetuancity_df[['Wind Speed']].mean())
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("MÉDIA:", tetuancity_df[['general diffuse flows']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['general diffuse flows']] < tetuancity_df[['general diffuse flows']].mean())
print("COLUNA 6:")
print("MÉDIA:", tetuancity_df[['diffuse flows']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['diffuse flows']] < tetuancity_df[['diffuse flows']].mean())
print("COLUNA 7:")
print("MÉDIA:", tetuancity_df[['Zone 1 Power Consumption']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Zone 1 Power Consumption']] < tetuancity_df[['Zone 1 Power Consumption']].mean())
print("COLUNA 8:")
print("MÉDIA:", tetuancity_df[['Zone 2  Power Consumption']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Zone 2  Power Consumption']] < tetuancity_df[['Zone 2  Power Consumption']].mean())
print("COLUNA 9:")
print("MÉDIA:", tetuancity_df[['Zone 3  Power Consumption']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Zone 3  Power Consumption']] < tetuancity_df[['Zone 3  Power Consumption']].mean())
print("========================================================================")


print("========================================================================")
print("VALORES ACIMA DA MÉDIA EM CADA COLUNA:")
print("========================================================================")
print("COLUNA 1:")
print("MÉDIA: ---- NÃO TEM É DATA")
print("------------------------------------------------------------------------")
print("É DATA")
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("MÉDIA:", tetuancity_df[['Temperature']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Temperature']] > tetuancity_df[['Temperature']].mean())
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("MÉDIA:", tetuancity_df[['Humidity']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Humidity']] > tetuancity_df[['Humidity']].mean())
print("------------------------------------------------------------------------")
print("COLUNA 4:")
print("MÉDIA:", tetuancity_df[['Wind Speed']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Wind Speed']] > tetuancity_df[['Wind Speed']].mean())
print("------------------------------------------------------------------------")
print("COLUNA 5:")
print("MÉDIA:", tetuancity_df[['general diffuse flows']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['general diffuse flows']] > tetuancity_df[['general diffuse flows']].mean())
print("COLUNA 6:")
print("MÉDIA:", tetuancity_df[['diffuse flows']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['diffuse flows']] > tetuancity_df[['diffuse flows']].mean())
print("COLUNA 7:")
print("MÉDIA:", tetuancity_df[['Zone 1 Power Consumption']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Zone 1 Power Consumption']] > tetuancity_df[['Zone 1 Power Consumption']].mean())
print("COLUNA 8:")
print("MÉDIA:", tetuancity_df[['Zone 2  Power Consumption']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Zone 2  Power Consumption']] > tetuancity_df[['Zone 2  Power Consumption']].mean())
print("COLUNA 9:")
print("MÉDIA:", tetuancity_df[['Zone 3  Power Consumption']].mean())
print("------------------------------------------------------------------------")
print(tetuancity_df[['Zone 3  Power Consumption']] > tetuancity_df[['Zone 3  Power Consumption']].mean())
print("========================================================================")

print("========================================================================")
print("DESVIO-PADRÃO DO TETUAN CITY:")
print("========================================================================")
desviopd4  = tetuancity_df.loc[:,].std(numeric_only=True)
print(str(desviopd4))
print("========================================================================")


print("========================================================================")
print("MODA DO TETUAN CITY:")
print("========================================================================")
print(tetuancity_df.mode()) # Tirando a moda (amostral)
print("========================================================================")

print("========================================================================")
print("MEDIANA DO TETUAN CITY:")
print("========================================================================")
media_tetuancity = tetuancity_df.median(numeric_only=True)
print(media_tetuancity)
print("========================================================================")

maximo_1 = tetuancity_df.loc[:,'DateTime'].max()
minimo_1 = tetuancity_df.loc[:,'DateTime'].min()

maximo_2 = tetuancity_df.loc[:,'Temperature'].max()
minimo_2 = tetuancity_df.loc[:,'Temperature'].min()

maximo_3 = tetuancity_df.loc[:,'Humidity'].max()
minimo_3 = tetuancity_df.loc[:,'Humidity'].min()

maximo_4 = tetuancity_df.loc[:,'Wind Speed'].max()
minimo_4 = tetuancity_df.loc[:,'Wind Speed'].min()

maximo_5 = tetuancity_df.loc[:,'general diffuse flows'].max()
minimo_5 = tetuancity_df.loc[:,'general diffuse flows'].min()

maximo_6 = tetuancity_df.loc[:,'diffuse flows'].max()
minimo_6 = tetuancity_df.loc[:,'diffuse flows'].min()

maximo_7 = tetuancity_df.loc[:,'Zone 1 Power Consumption'].max()
minimo_7 = tetuancity_df.loc[:,'Zone 1 Power Consumption'].min()

maximo_8 = tetuancity_df.loc[:,'Zone 2  Power Consumption'].max()
minimo_8 = tetuancity_df.loc[:,'Zone 2  Power Consumption'].min()

maximo_9 = tetuancity_df.loc[:,'Zone 3  Power Consumption'].max()
minimo_9 = tetuancity_df.loc[:,'Zone 3  Power Consumption'].min()

print("========================================================================")
print("MAIOR E MENOR VALOR DAS COLUNAS DO TETUAN CITY:")
print("========================================================================")
print("Maximo da coluna 1 = "+str(maximo_1))
print("Minimo coluna 1 = "+str(minimo_1))
print("========================================================================")
print("Maximo da coluna 2 = "+str(maximo_2))
print("Minimo coluna 2 = "+str(minimo_2))
print("========================================================================")
print("Maximo da coluna 3 = "+str(maximo_3))
print("Minimo coluna 3 = "+str(minimo_3))
print("========================================================================")
print("Maximo da coluna 4 = "+str(maximo_4))
print("Minimo coluna 4 = "+str(minimo_4))
print("========================================================================")
print("Maximo da coluna 5 = "+str(maximo_5))
print("Minimo coluna 5 = "+str(minimo_5))
print("========================================================================")
print("Maximo da coluna 6 = "+str(maximo_6))
print("Minimo coluna 6 = "+str(minimo_6))
print("========================================================================")
print("Maximo da coluna 7 = "+str(maximo_7))
print("Minimo coluna 7 = "+str(minimo_7))
print("========================================================================")
print("Maximo da coluna 8 = "+str(maximo_8))
print("Minimo coluna 8 = "+str(minimo_8))
print("========================================================================")
print("Maximo da coluna 9 = "+str(maximo_9))
print("Minimo coluna 9 = "+str(minimo_9))
print("========================================================================")

print("#############################################################################################################")
print("#############################################################################################################")
print("USANDO O PEDALME EDGES")
print("#############################################################################################################")
print("#############################################################################################################")

print("========================================================================")
print("TIPOS DE DADOS DO DATAFRAME:")
print("========================================================================")
print(pedalmeedges_df.dtypes)
print("========================================================================")

print("========================================================================")
print("TIPOS DE DADOS DE CADA COLUNA:")
print("========================================================================")
print(pedalmeedges_df.info())
print("========================================================================")

print("========================================================================")
print("DADOS BRUTOS")
print("========================================================================")
print(pedalmeedges_df)
print("========================================================================")

print("========================================================================")
print("ORDENANDO DE FORMA ASCENDENTE CADA UMA DAS COLUNAS:")
print("========================================================================")
print("COLUNA 1:")
print("------------------------------------------------------------------------")
print(pedalmeedges_df.sort_values("from"))
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("------------------------------------------------------------------------")
print(pedalmeedges_df.sort_values("to"))
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("------------------------------------------------------------------------")
print(pedalmeedges_df.sort_values('weight'))
print("========================================================================")


print("========================================================================")
print("ORDENANDO DE FORMA DECRESCENTE CADA UMA DAS COLUNAS:")
print("========================================================================")
print("COLUNA 1:")
print("------------------------------------------------------------------------")
print(pedalmeedges_df.sort_values("from", ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("------------------------------------------------------------------------")
print(pedalmeedges_df.sort_values("to", ascending= False))
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("------------------------------------------------------------------------")
print(pedalmeedges_df.sort_values('weight', ascending= False))
print("========================================================================")


print("========================================================================")
print("DESCRIÇÃO:")
print("========================================================================")
print(pedalmeedges_df.describe())
print("========================================================================")

print("========================================================================")
print("MÉDIA DO PEDALME EDGES:")
print("========================================================================")
# DateTima é data
print(pedalmeedges_df[["from","to","weight"]].mean()) # Tirando a média
print("========================================================================")

print("========================================================================")
print("VALORES ABAIXO DA MÉDIA EM CADA COLUNA:")
print("========================================================================")
print("COLUNA 1:")
print("MÉDIA:", pedalmeedges_df[['from']].mean())
print("------------------------------------------------------------------------")
print(pedalmeedges_df[['from']] < pedalmeedges_df[['from']].mean())
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("MÉDIA:", pedalmeedges_df[['to']].mean())
print("------------------------------------------------------------------------")
print(pedalmeedges_df[['to']] < pedalmeedges_df[['to']].mean())
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("MÉDIA:", pedalmeedges_df[['weight']].mean())
print("------------------------------------------------------------------------")
print(pedalmeedges_df[['weight']] < pedalmeedges_df[['weight']].mean())
print("========================================================================")


print("========================================================================")
print("VALORES ACIMA DA MÉDIA EM CADA COLUNA:")
print("========================================================================")
print("COLUNA 1:")
print("MÉDIA:", pedalmeedges_df[['from']].mean())
print("------------------------------------------------------------------------")
print(pedalmeedges_df[['from']] > pedalmeedges_df[['from']].mean())
print("------------------------------------------------------------------------")
print("COLUNA 2:")
print("MÉDIA:", pedalmeedges_df[['to']].mean())
print("------------------------------------------------------------------------")
print(pedalmeedges_df[['to']] > pedalmeedges_df[['to']].mean())
print("------------------------------------------------------------------------")
print("COLUNA 3:")
print("MÉDIA:", pedalmeedges_df[['weight']].mean())
print("------------------------------------------------------------------------")
print(pedalmeedges_df[['weight']] > pedalmeedges_df[['weight']].mean())
print("========================================================================")

print("========================================================================")
print("DESVIO-PADRÃO DO PEDALME EDGES:")
print("========================================================================")
desviopd5  = pedalmeedges_df.loc[:,].std(numeric_only=True)
print(str(desviopd5))
print("========================================================================")

print("========================================================================")
print("MODA DO PEDALME EDGES:")
print("========================================================================")
print(pedalmeedges_df.mode()) # Tirando a moda (amostral)
print("========================================================================")

print("========================================================================")
print("MEDIANA DO PEDALME EDGES:")
print("========================================================================")
media_pedalmeedges = pedalmeedges_df.median(numeric_only=True)
print(media_pedalmeedges)
print("========================================================================")

maximo_l = pedalmeedges_df.loc[:,'from'].max()
minimo_l = pedalmeedges_df.loc[:,'from'].min()

maximo_m = pedalmeedges_df.loc[:,'to'].max()
minimo_m = pedalmeedges_df.loc[:,'to'].min()

maximo_n = pedalmeedges_df.loc[:,'weight'].max()
minimo_n = pedalmeedges_df.loc[:,'weight'].min()

print("========================================================================")
print("MAIOR E MENOR VALOR DAS COLUNAS DO PEDALME EDGES:")
print("========================================================================")
print("Maximo da coluna 1 = "+str(maximo_l))
print("Minimo coluna 1 = "+str(minimo_l))
print("========================================================================")
print("========================================================================")
print("Maximo da coluna 2 = "+str(maximo_m))
print("Minimo coluna 2 = "+str(minimo_m))
print("========================================================================")
print("========================================================================")
print("Maximo da coluna 3 = "+str(maximo_n))
print("Minimo coluna 3 = "+str(minimo_n))
print("========================================================================")

#Gerando gráficos

plt.scatter(iris_df["5.1"],iris_df["3.5"],color = "black", marker="o")
pyplot.xlabel("5.1")
pyplot.ylabel("3.5")
plt.title("Iris.data")
plt.show()

plt.scatter(pedalmeedges_df["weight"],pedalmeedges_df["from"],pedalmeedges_df["to"],color = "red", marker="*")
pyplot.xlabel("weight")
pyplot.ylabel("from")
pyplot.xlabel("to")
plt.title("Pedalme_edges.csv")
plt.show()

plt.scatter(wine_df["1"],wine_df["1.71"],color = "blue", marker="+")
pyplot.xlabel("1")
pyplot.ylabel("1.71")
plt.title("Wine.data")

plt.show()

plt.scatter(accelerometer_df["x"],accelerometer_df["y"],color = "yellow", marker="o")
pyplot.xlabel("x")
pyplot.ylabel("y")
plt.title("Accelerometer.csv")
plt.show()

plt.scatter(tetuancity_df["Temperature"],tetuancity_df["Humidity"],color = "green", marker="*")
pyplot.xlabel("Temperature")
pyplot.ylabel("Humidity")
plt.title("Tetuan City power consuption.csv")
plt.show()